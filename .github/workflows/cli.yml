name: CLI

on:
  push:
    paths:
      - "src/Worms.Cli/**"
      - "src/Worms.Cli.*/**"
      - "src/Worms.Armageddon.*/**"
      - "build/cli/**"
      - "build/release-github.sh"
      - "build/version.sh"
      - ".github/workflows/cli.yml"

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Run tests
        run: make cli.test.unit

  package-cli-windows:
    name: Package - Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: make cli.package.windows
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: win-x64
          path: .artifacts/win-x64/

  package-cli-linux-x64:
    name: Package - Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: make cli.package.linux
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: linux-x64
          path: .artifacts/linux-x64/

  package-cli-linux-musl-x64:
    name: Package - Alpine
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: make cli.package.alpine
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: linux-musl-x64
          path: .artifacts/linux-musl-x64/

  package-cli-docker:
    name: Package - Docker
    needs: package-cli-linux-musl-x64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: linux-musl-x64
          path: .artifacts/linux-musl-x64/
      - name: Build
        run: make cli.build.docker

  overall-build:
    name: Overall Build
    needs:
      - unit-tests
      - package-cli-windows
      - package-cli-linux-x64
      - package-cli-linux-musl-x64
      - package-cli-docker
    runs-on: ubuntu-latest
    steps:
      - name: Check
        run: echo "Checked"

  release-cli-github:
    name: Release - GitHub
    needs: overall-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: win-x64
          path: .artifacts/win-x64/
      - name: Release
        run: make cli.release.github GitHubAuthToken=${{ secrets.GITHUB_TOKEN }} GitHubRepo=${{ github.repository }}

  release-cli-dockerhub:
    name: Release - DockerHub
    needs: overall-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: linux-musl-x64
          path: .artifacts/linux-musl-x64/
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: theeadie
          password: ${{ secrets.DockerHubAccessToken }}
      - name: Release
        run: make cli.release.dockerhub
