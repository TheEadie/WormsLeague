name: CLI

on:
  push:
    paths:
    - "CommandLine/**"
    - ".build/**"
    - ".github/workflows/cli.yml"

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Run tests
      run: cd CommandLine; dotnet test

  build-cli-windows:
    name: Build - Windows
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      run: cd CommandLine; make windows
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: win-x64
        path: CommandLine/.artifacts/win-x64/

  build-cli-linux-x64:
    name: Build - Linux
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      run: cd CommandLine; make linux
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: linux-x64
        path: CommandLine/.artifacts/linux-x64/

  build-cli-linux-musl-x64:
    name: Build - Alpine
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      run: cd CommandLine; make alpine
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: linux-musl-x64
        path: CommandLine/.artifacts/linux-musl-x64/

  build-cli-docker:
    name: Build - Docker
    needs: build-cli-linux-musl-x64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: linux-musl-x64
        path: CommandLine/.artifacts/linux-musl-x64/
    - name: Build
      run: cd CommandLine; make docker-build

  release-cli-github:
    name: Release - GitHub
    needs: build-cli-windows
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: win-x64
        path: CommandLine/.artifacts/win-x64/
    - name: Release
      run: cd CommandLine; make release-github GitHubAuthToken=${{ secrets.GITHUB_TOKEN }} GitHubRepo=${{ github.repository }}

  release-cli-dockerhub:
    name: Release - DockerHub
    needs: build-cli-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: linux-musl-x64
        path: CommandLine/.artifacts/linux-musl-x64/
    - name: Release
      run: cd CommandLine; make release-dockerhub DockerHubAuthToken=${{ secrets.DockerHubAccessToken  }}