name: Deploy - Preview

on:
  pull_request:
    paths:
    - "deployment/worms.davideadie.dev/**"
    - ".github/workflows/deploy.yml"

jobs:

  preview-azure:
    name: Azure
    runs-on: ubuntu-latest
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - uses: pulumi/actions@v3
        with:
          command: preview
          stack-name: prod
          work-dir: deployment/worms.davideadie.dev
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

  preview-database:
    name: Database
    runs-on: ubuntu-latest
    env:
      SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWN_ACCESS_TOKEN }}
      FLYWAY_LICENSE_KEY: ${{ secrets.FLYWAY_LICENSE_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get version
      id: vars
      run: echo ::set-output name=version::$(cat deployment/worms.davideadie.dev/database-version.txt)

    - name: Spawn a database
      id: create-container
      uses: red-gate/create-spawn-data-container/@v1
      with:
        dataImage: worms-hub
        lifetime: '1h'

    - name: Flyway Check
      run: >-
        docker run --rm \
          --volume ${{ github.workspace }}/src/database/migrations:/flyway/sql:ro \
          --volume ${{ github.workspace }}/src/database/reports:/flyway/reports \
          -e FLYWAY_LICENSE_KEY \
          redgate/flyway:9-alpine \
          -url="jdbc:postgresql://${{ secrets.PROD_DATABASE_HOST }}:${{ secrets.PROD_DATABASE_PORT }}/${{ secrets.PROD_DATABASE_NAME }}" \
          -user="${{ secrets.PROD_DATABASE_USER }}" \
          -password="${{ secrets.PROD_DATABASE_PASSWORD }}" \
          check -changes -drift\
          -check.buildUrl="jdbc:postgresql://${{ steps.create-container.outputs.dataContainerHost }}:${{ steps.create-container.outputs.dataContainerPort }}/${{ secrets.PROD_DATABASE_NAME }}" \
          -check.buildUser="${{ steps.create-container.outputs.dataContainerUsername }}" \
          -check.buildPassword="${{ steps.create-container.outputs.dataContainerPassword }}" \
          -target=${{ steps.vars.outputs.version }} \
          -check.reportFilename="/flyway/reports/report.htm"

    - name: Upload report
      uses: actions/upload-artifact@v3
      with:
        name: Database Report
        path: src/database/reports/
